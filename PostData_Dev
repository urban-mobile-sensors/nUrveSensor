/*
 * This script is designed to help post data to Sparkfun's data stream
 * Process:
 * - We're keeping FONA on all the time for this one, and streaming one data element at a time. Because we have to stream with such frequency
 * - Process:
 * This is a function that's called every XX interval
 * - Turn on FONA
 * - Wait 5 seconds
 * - Check Signal Strength
 * - If Strength is good enough (and we're connected to the network) then...
 *    - Read data from SD Card and upload to sparkfun (how do I add a whole data set and not just one row?
 */

//void PostDataDev() {
//  Serial.println("----------------------------------");
//  Serial.print(digitalRead(FONA_PS));Serial.print("-");Serial.println(digitalRead(FONA_KEY));
//  Serial.println("----------------------------------");
//  FONA_turnON();
//  FONA_flush();     //if there is stuff in the Serial buffer print it
//  delay(5000);      //delay for 5 seconds. NOTE: NEEDS to be longer than 3 seconds, 10 works great.
//  FONA_GPRSsetup(); //turn on GPRS, set APN, etc. 
//  delay(5000);      //delay for 5 seconds to let things settle.
//
//  // FLUSH FONA 
//  // CONNECT TO NETWORK
//  // TURN ON GPRS (to POST)
//  // CHECK CONNECTION STRENGTH (is it good enough?)
//  // IF CONNECTION STRENGTH IS GOOD ENOUGH THAN START POSTING
//      // READ DATA FROM SD CARD & WRITE TO SITE
//  FONA_turnOFF();
//  Serial.println("----------------------------------");
//}
// // TURN ON or OFF FONA
// void FONA_turnON() { // Turns FONA ON if OFF otherwise do nothing
//    Serial.println("FAKE - TURN - ON");
//    /*
//     * FOR THE TIME BEING WE'RE NOT ABLE TO CONTROL POWER - WE NEED TO FIGURE OUT HOW TO CUT GND 
//     if(! digitalRead(FONA_PS)) { //Check if it's On already. LOW is off, HIGH is ON.
//        Serial.print("FONA is OFF, Powering ON: ");
//        digitalWrite(FONA_KEY,LOW); //pull down power set pin
//        unsigned long KeyPress = millis(); 
//        while(KeyPress + keyTime >= millis()) {} //wait two seconds
//        digitalWrite(FONA_KEY,HIGH); //pull it back up again
//        Serial.println("FONA Powered Up");
//    } else {
//        Serial.println("FONA Already On, Did Nothing");
//    }
//    */
//}
//
//void FONA_turnOFF() { //does the opposite of turning the FONA ON (ie. OFF)
//    Serial.println("FAKE - TURN - OFF");
//    /*
//     * FOR THE TIME BEING WE'RE NOT ABLE TO CONTROL POWER - WE NEED TO FIGURE OUT HOW TO CUT GND 
//    if(digitalRead(FONA_PS)) { //check if FONA is OFF
//        Serial.print("FONA is ON, Powering OFF: "); 
//        digitalWrite(FONA_KEY,LOW);
//        unsigned long KeyPress = millis();
//        while(KeyPress + keyTime >= millis()) {}
//        digitalWrite(FONA_KEY,HIGH);
//        Serial.println("FONA is Powered Down");
//    } else {
//        Serial.println("FONA is already off, did nothing.");
//    }
//    */
//}
//
//void FONA_flush() { //if there is anything is the fonaSS serial Buffer, clear it out and print it in the Serial Monitor.
//    char inChar;
//    while (fonaSS.available()){
//        inChar = fonaSS.read();
//        Serial.write(inChar);
//        Serial.println(inChar);
//        delay(20);
//    }
//    Serial.println("FONA is flushed");
//}
//
//void FONA_GPRSsetup() { //all the commands to setup a GPRS context and get ready for HTTP command
//    sendATCommand("ATE0");
//    sendATCommand("AT+CMEE=2");
//    //the sendATCommand sends the command to the FONA and waits until the recieves a response before continueing on. 
////    Serial.print("disable echo: ");
////    if(sendATCommand("ATE0")) { //disable local echo
////        Serial.println(response);
////    }
////    Serial.print("long errors: ");
///*    
// *     
// if(sendATCommand("AT+CMEE=2")){ //enable verbose errors
//  //      Serial.println(response);
//    }
////    Serial.print("at+cmgf=1: ");
//    if(sendATCommand("AT+CMGF=1")){ //sets SMS mode to TEXT mode....This MIGHT not be needed. But it doesn't break anything with it there. 
//  //      Serial.println(response);
//    }
////    Serial.print("at+cgatt=1: ");
//    if(sendATCommand("AT+CGATT=1")){ //Attach to GPRS service (1 - attach, 0 - disengage)
////        Serial.println(response);
//    }
//    //AT+SAPBR - Bearer settings for applications based on IP
////    Serial.print("Connection Type: GPRS: ");
//    if(sendATCommand("AT+SAPBR=3,1,\"CONTYPE\",\"GPRS\"")){ //3 - Set bearer perameters
////        Serial.println(response);
//    }
////    Serial.print("Set APN: ");
//    if(sendATCommand("AT+SAPBR=3,1,\"APN\",\"att.mvno\"")){ //sets APN for transaction
//  //      Serial.println(response);
//    }
//    if(sendATCommand("AT+SAPBR=1,1")) { //Open Bearer
//    }
//*/    Serial.println("FONA GPRS is on");
//
//}
